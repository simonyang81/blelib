// Mocks generated by Mockito 5.4.4 from annotations
// in blelib/test/local_db_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:blelib/ble/product_config.dart' as _i7;
import 'package:blelib/blelib.dart' as _i6;
import 'package:flutter_blue_plus/flutter_blue_plus.dart' as _i2;
import 'package:get/get.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDeviceIdentifier_0 extends _i1.SmartFake
    implements _i2.DeviceIdentifier {
  _FakeDeviceIdentifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_1<T> extends _i1.SmartFake implements _i3.Rx<T> {
  _FakeRx_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_2 extends _i1.SmartFake implements _i3.RxBool {
  _FakeRxBool_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BluetoothDevice].
///
/// See the documentation for Mockito's code generation for more information.
class MockBluetoothDevice extends _i1.Mock implements _i2.BluetoothDevice {
  @override
  _i2.DeviceIdentifier get remoteId => (super.noSuchMethod(
        Invocation.getter(#remoteId),
        returnValue: _FakeDeviceIdentifier_0(
          this,
          Invocation.getter(#remoteId),
        ),
        returnValueForMissingStub: _FakeDeviceIdentifier_0(
          this,
          Invocation.getter(#remoteId),
        ),
      ) as _i2.DeviceIdentifier);

  @override
  String get platformName => (super.noSuchMethod(
        Invocation.getter(#platformName),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#platformName),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#platformName),
        ),
      ) as String);

  @override
  String get advName => (super.noSuchMethod(
        Invocation.getter(#advName),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#advName),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#advName),
        ),
      ) as String);

  @override
  List<_i2.BluetoothService> get servicesList => (super.noSuchMethod(
        Invocation.getter(#servicesList),
        returnValue: <_i2.BluetoothService>[],
        returnValueForMissingStub: <_i2.BluetoothService>[],
      ) as List<_i2.BluetoothService>);

  @override
  bool get isAutoConnectEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoConnectEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Stream<_i2.BluetoothConnectionState> get connectionState =>
      (super.noSuchMethod(
        Invocation.getter(#connectionState),
        returnValue: _i5.Stream<_i2.BluetoothConnectionState>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i2.BluetoothConnectionState>.empty(),
      ) as _i5.Stream<_i2.BluetoothConnectionState>);

  @override
  int get mtuNow => (super.noSuchMethod(
        Invocation.getter(#mtuNow),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i5.Stream<int> get mtu => (super.noSuchMethod(
        Invocation.getter(#mtu),
        returnValue: _i5.Stream<int>.empty(),
        returnValueForMissingStub: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);

  @override
  _i5.Stream<void> get onServicesReset => (super.noSuchMethod(
        Invocation.getter(#onServicesReset),
        returnValue: _i5.Stream<void>.empty(),
        returnValueForMissingStub: _i5.Stream<void>.empty(),
      ) as _i5.Stream<void>);

  @override
  _i5.Stream<_i2.BluetoothBondState> get bondState => (super.noSuchMethod(
        Invocation.getter(#bondState),
        returnValue: _i5.Stream<_i2.BluetoothBondState>.empty(),
        returnValueForMissingStub: _i5.Stream<_i2.BluetoothBondState>.empty(),
      ) as _i5.Stream<_i2.BluetoothBondState>);

  @override
  _i5.Stream<bool> get isDiscoveringServices => (super.noSuchMethod(
        Invocation.getter(#isDiscoveringServices),
        returnValue: _i5.Stream<bool>.empty(),
        returnValueForMissingStub: _i5.Stream<bool>.empty(),
      ) as _i5.Stream<bool>);

  @override
  _i2.DeviceIdentifier get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _FakeDeviceIdentifier_0(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _FakeDeviceIdentifier_0(
          this,
          Invocation.getter(#id),
        ),
      ) as _i2.DeviceIdentifier);

  @override
  String get localName => (super.noSuchMethod(
        Invocation.getter(#localName),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#localName),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#localName),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i5.Stream<_i2.BluetoothConnectionState> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i5.Stream<_i2.BluetoothConnectionState>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i2.BluetoothConnectionState>.empty(),
      ) as _i5.Stream<_i2.BluetoothConnectionState>);

  @override
  _i5.Stream<List<_i2.BluetoothService>> get servicesStream =>
      (super.noSuchMethod(
        Invocation.getter(#servicesStream),
        returnValue: _i5.Stream<List<_i2.BluetoothService>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<List<_i2.BluetoothService>>.empty(),
      ) as _i5.Stream<List<_i2.BluetoothService>>);

  @override
  _i5.Stream<List<_i2.BluetoothService>> get services => (super.noSuchMethod(
        Invocation.getter(#services),
        returnValue: _i5.Stream<List<_i2.BluetoothService>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<List<_i2.BluetoothService>>.empty(),
      ) as _i5.Stream<List<_i2.BluetoothService>>);

  @override
  void cancelWhenDisconnected(
    _i5.StreamSubscription<dynamic>? subscription, {
    bool? next = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #cancelWhenDisconnected,
          [subscription],
          {#next: next},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> connect({
    Duration? timeout = const Duration(seconds: 35),
    int? mtu = 512,
    bool? autoConnect = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {
            #timeout: timeout,
            #mtu: mtu,
            #autoConnect: autoConnect,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> disconnect({
    int? timeout = 35,
    bool? queue = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
          {
            #timeout: timeout,
            #queue: queue,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i2.BluetoothService>> discoverServices({
    bool? subscribeToServicesChanged = true,
    int? timeout = 15,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #discoverServices,
          [],
          {
            #subscribeToServicesChanged: subscribeToServicesChanged,
            #timeout: timeout,
          },
        ),
        returnValue: _i5.Future<List<_i2.BluetoothService>>.value(
            <_i2.BluetoothService>[]),
        returnValueForMissingStub: _i5.Future<List<_i2.BluetoothService>>.value(
            <_i2.BluetoothService>[]),
      ) as _i5.Future<List<_i2.BluetoothService>>);

  @override
  _i5.Future<int> readRssi({int? timeout = 15}) => (super.noSuchMethod(
        Invocation.method(
          #readRssi,
          [],
          {#timeout: timeout},
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> requestMtu(
    int? desiredMtu, {
    double? predelay = 0.35,
    int? timeout = 15,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestMtu,
          [desiredMtu],
          {
            #predelay: predelay,
            #timeout: timeout,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> requestConnectionPriority(
          {required _i2.ConnectionPriority? connectionPriorityRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestConnectionPriority,
          [],
          {#connectionPriorityRequest: connectionPriorityRequest},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setPreferredPhy({
    required int? txPhy,
    required int? rxPhy,
    required _i2.PhyCoding? option,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPreferredPhy,
          [],
          {
            #txPhy: txPhy,
            #rxPhy: rxPhy,
            #option: option,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createBond({int? timeout = 90}) => (super.noSuchMethod(
        Invocation.method(
          #createBond,
          [],
          {#timeout: timeout},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeBond({int? timeout = 30}) => (super.noSuchMethod(
        Invocation.method(
          #removeBond,
          [],
          {#timeout: timeout},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearGattCache() => (super.noSuchMethod(
        Invocation.method(
          #clearGattCache,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> pair() => (super.noSuchMethod(
        Invocation.method(
          #pair,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [BleDevice].
///
/// See the documentation for Mockito's code generation for more information.
class MockBleDevice extends _i1.Mock implements _i6.BleDevice {
  @override
  _i3.Rx<_i2.BluetoothConnectionState> get bleState => (super.noSuchMethod(
        Invocation.getter(#bleState),
        returnValue: _FakeRx_1<_i2.BluetoothConnectionState>(
          this,
          Invocation.getter(#bleState),
        ),
        returnValueForMissingStub: _FakeRx_1<_i2.BluetoothConnectionState>(
          this,
          Invocation.getter(#bleState),
        ),
      ) as _i3.Rx<_i2.BluetoothConnectionState>);

  @override
  set bleState(_i3.Rx<_i2.BluetoothConnectionState>? _bleState) =>
      super.noSuchMethod(
        Invocation.setter(
          #bleState,
          _bleState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.RxBool get isScanAvailable => (super.noSuchMethod(
        Invocation.getter(#isScanAvailable),
        returnValue: _FakeRxBool_2(
          this,
          Invocation.getter(#isScanAvailable),
        ),
        returnValueForMissingStub: _FakeRxBool_2(
          this,
          Invocation.getter(#isScanAvailable),
        ),
      ) as _i3.RxBool);

  @override
  set isScanAvailable(_i3.RxBool? _isScanAvailable) => super.noSuchMethod(
        Invocation.setter(
          #isScanAvailable,
          _isScanAvailable,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isListeningChar => (super.noSuchMethod(
        Invocation.getter(#isListeningChar),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isListeningChar(bool? _isListeningChar) => super.noSuchMethod(
        Invocation.setter(
          #isListeningChar,
          _isListeningChar,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isListeningConn => (super.noSuchMethod(
        Invocation.getter(#isListeningConn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isListeningConn(bool? _isListeningConn) => super.noSuchMethod(
        Invocation.setter(
          #isListeningConn,
          _isListeningConn,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isClosing => (super.noSuchMethod(
        Invocation.getter(#isClosing),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isClosing(bool? _isClosing) => super.noSuchMethod(
        Invocation.setter(
          #isClosing,
          _isClosing,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionListener(
          _i5.StreamSubscription<_i2.BluetoothConnectionState>?
              _connectionListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectionListener,
          _connectionListener,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set charListener(_i5.StreamSubscription<List<int>>? _charListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #charListener,
          _charListener,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get battery => (super.noSuchMethod(
        Invocation.getter(#battery),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set battery(int? _battery) => super.noSuchMethod(
        Invocation.setter(
          #battery,
          _battery,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastScan(DateTime? _lastScan) => super.noSuchMethod(
        Invocation.setter(
          #lastScan,
          _lastScan,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set device(_i2.BluetoothDevice? _device) => super.noSuchMethod(
        Invocation.setter(
          #device,
          _device,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set characteristic(_i2.BluetoothCharacteristic? _characteristic) =>
      super.noSuchMethod(
        Invocation.setter(
          #characteristic,
          _characteristic,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set notifyCharacteristic(
          _i2.BluetoothCharacteristic? _notifyCharacteristic) =>
      super.noSuchMethod(
        Invocation.setter(
          #notifyCharacteristic,
          _notifyCharacteristic,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, _i2.BluetoothCharacteristic> get allCharacteristic =>
      (super.noSuchMethod(
        Invocation.getter(#allCharacteristic),
        returnValue: <String, _i2.BluetoothCharacteristic>{},
        returnValueForMissingStub: <String, _i2.BluetoothCharacteristic>{},
      ) as Map<String, _i2.BluetoothCharacteristic>);

  @override
  set allCharacteristic(
          Map<String, _i2.BluetoothCharacteristic>? _allCharacteristic) =>
      super.noSuchMethod(
        Invocation.setter(
          #allCharacteristic,
          _allCharacteristic,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get rssi => (super.noSuchMethod(
        Invocation.getter(#rssi),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set rssi(int? _rssi) => super.noSuchMethod(
        Invocation.setter(
          #rssi,
          _rssi,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set productConfig(_i7.ProductConfig? _productConfig) => super.noSuchMethod(
        Invocation.setter(
          #productConfig,
          _productConfig,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get connectTimestamp => (super.noSuchMethod(
        Invocation.getter(#connectTimestamp),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set connectTimestamp(int? _connectTimestamp) => super.noSuchMethod(
        Invocation.setter(
          #connectTimestamp,
          _connectTimestamp,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get localName => (super.noSuchMethod(
        Invocation.getter(#localName),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#localName),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#localName),
        ),
      ) as String);

  @override
  set localName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #localName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get deviceId => (super.noSuchMethod(
        Invocation.getter(#deviceId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#deviceId),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#deviceId),
        ),
      ) as String);

  @override
  String get deviceName => (super.noSuchMethod(
        Invocation.getter(#deviceName),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#deviceName),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#deviceName),
        ),
      ) as String);

  @override
  set deviceName(dynamic newName) => super.noSuchMethod(
        Invocation.setter(
          #deviceName,
          newName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.BleDeviceState getBleState() => (super.noSuchMethod(
        Invocation.method(
          #getBleState,
          [],
        ),
        returnValue: _i6.BleDeviceState.disconnected,
        returnValueForMissingStub: _i6.BleDeviceState.disconnected,
      ) as _i6.BleDeviceState);

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String deviceRawName() => (super.noSuchMethod(
        Invocation.method(
          #deviceRawName,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #deviceRawName,
            [],
          ),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #deviceRawName,
            [],
          ),
        ),
      ) as String);

  @override
  void setDeviceRawName(String? newName) => super.noSuchMethod(
        Invocation.method(
          #setDeviceRawName,
          [newName],
        ),
        returnValueForMissingStub: null,
      );
}
